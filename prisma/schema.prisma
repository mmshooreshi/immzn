generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  phone            String         @unique
  email            String         @default("")
  avatar           String?
  fullName         String                    @default("")
  affiliation      String?
  role             Role                      @default(OTHER)
  field            String? 
  attendance       Attendance                @default(REMOTE)
  tracks           Json                      @default("[]")
  cvUrl            String?
  wantsNewsletter  Boolean        @default(false)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt

  payments         Payment[]
  teamMembers      TeamMember[]
  teamsLed         Team[]         @relation("TeamLeader")

  @@index([phone])
}

model Payment {
  id             Int           @id @default(autoincrement())
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  amount         Float
  currency       String        @default("IRR")
  method         String
  status         PaymentStatus @default(PENDING)
  transactionId  String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt

  @@index([userId])
  @@index([transactionId])
}

model Team {
  id             Int            @id @default(autoincrement())
  name           String         @unique
  avatar         String?
  leaderId       Int
  leader         User           @relation("TeamLeader", fields: [leaderId], references: [id])
  hackathonTrack String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt

  members        TeamMember[]
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  teamId    Int
  team      Team     @relation(fields: [teamId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  role      String
  joinedAt  DateTime @default(now())

  @@unique([teamId, userId])
}

enum Role {
  RESEARCHER
  ENGINEER
  DESIGNER
  STUDENT
  OTHER
}

enum Attendance {
  IN_PERSON
  REMOTE
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}
